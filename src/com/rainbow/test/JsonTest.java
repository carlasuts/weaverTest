package com.rainbow.test;

import java.util.ArrayList;
import java.util.List;

import org.json.JSONException;
import org.json.JSONObject;

import weaver.interfaces.sap.HttpClientJson;

public class JsonTest {

	public static void main(String[] args) {
		String url = "http://172.16.60.96:8099/MesWebService/req";
		try {
			JSONObject req = new JSONObject();
			JSONObject message = new JSONObject();
			JSONObject shell = new JSONObject();
			List<JSONObject> cInfSpeDatList = new ArrayList<JSONObject>();
			List<JSONObject> cInfPatDatList = new ArrayList<JSONObject>();
			List<JSONObject> cInfFlwDatList = new ArrayList<JSONObject>();
			List<JSONObject> cInfBomDatList = new ArrayList<JSONObject>();
			/**
			 * SPE
			 */
			req.put("fromSystem", "OA");
			req.put("functionName", "MES_UPLOADMASTERDATA");
			req.put("token", "OATESTTOKEN");
			shell.put("infTime", " ");
			shell.put("infSeq", String.valueOf(1));
			shell.put("factory", "DIEBANK");
			shell.put("matId", " ");
			shell.put("custId", " ");
			shell.put("custMatId", " ");// 客户品名
			shell.put("custMatDesc", " ");
			shell.put("dbMatId", " ");
			shell.put("pkgType", " ");
			shell.put("packCode", " ");
			shell.put("pkldCode", " ");
			shell.put("addBondDiagramNo", " ");
			shell.put("addBondDiagramRev", " ");
			shell.put("flowId", " ");
			shell.put("orgCustDeviceId", " ");
			shell.put("topMarkFormatId", " ");
			shell.put("backMarkFormatId", " ");
			shell.put("recipeGroup", " ");
			shell.put("stdLotSize", " ");
			shell.put("matUnit", " ");
			shell.put("buOper", " ");
			shell.put("tnrStdOutboxQty", " ");
			shell.put("tubeStdOutboxQty", " ");
			shell.put("tubeRealPackQty", " ");
			shell.put("stdPackQty", " ");
			shell.put("halfPackQty", " ");
			shell.put("tnrQty", " ");
			shell.put("tubeQty", " ");
			shell.put("trNeedFullInbox", " ");
			shell.put("info1", " ");
			shell.put("info2", " ");
			shell.put("info3", " ");
			shell.put("info4", " ");
			shell.put("info5", " ");// formtable_main_78
			shell.put("lable1", " ");
			shell.put("lable2", " ");
			shell.put("lable3", " ");
			shell.put("lable4", " ");
			shell.put("lable5", " ");
			shell.put("lable6", " ");
			shell.put("lable7", " ");
			shell.put("lable8", " ");
			shell.put("lable9", " ");
			shell.put("lable10", " ");
			shell.put("lable11", " ");
			shell.put("lable12", " ");
			shell.put("lable13", " ");
			shell.put("lable14", " ");
			shell.put("lable15", " ");
			shell.put("lable16", " ");
			shell.put("lable17", " ");
			shell.put("lable18", " ");
			shell.put("lable19", " ");
			shell.put("lable20", " ");// formtable_main_78
			shell.put("mark1", " ");
			shell.put("mark2", " ");
			shell.put("mark3", " ");
			shell.put("mark4", " ");
			shell.put("mark5", " ");
			shell.put("trDataType", " ");
			shell.put("instruction1", " ");
			shell.put("instruction2", " ");
			shell.put("instruction3", " ");
			shell.put("upperWfThick", " ");
			shell.put("lowerWfThick", " ");
			shell.put("wfSize", " ");
			shell.put("primaryTcard", " ");//
			shell.put("msllabel", " ");
			shell.put("bsmCode", " ");
			shell.put("lotCode", " ");
			shell.put("tsmCode", " ");
			shell.put("outDevice", " ");
			shell.put("markngSpecVersion", " ");
			shell.put("chipSizeX", " ");
			shell.put("chipSizeY", " ");
			shell.put("scribeWidth", " ");
			shell.put("bpo", " ");
			shell.put("bpp", " ");
			shell.put("cardProcFg", " ");
			shell.put("pbFreeFg", " ");
			shell.put("dieDown", " ");
			shell.put("bomNo", " ");
			shell.put("grpDevice", " ");
			shell.put("prodClass", " ");
			shell.put("subLotSize", " ");
			shell.put("maxAsyLotCnt", " ");
			shell.put("wfIngredients", " ");
			shell.put("chipType", " ");
			shell.put("daMode", " ");
			shell.put("dieCoating", " ");
			shell.put("hygrosLevel", " ");
			shell.put("coatingType", " ");
			shell.put("carProd", " ");
			shell.put("mark", " ");
			shell.put("plate", " ");
			shell.put("reelSize", " ");
			shell.put("reelDiraction", " ");
			shell.put("rellQty", " ");
			shell.put("halogenFProd", " ");
			shell.put("stripProd", " ");
			shell.put("padType", " ");
			shell.put("testFlwChart", " ");
			shell.put("testPlatfom", " ");
			shell.put("testSystem", " ");
			shell.put("testHandler", " ");
			shell.put("testPrgRev1", " ");
			shell.put("qaPrg1", " ");
			shell.put("qaPrg2", " ");
			shell.put("testTempe", " ");
			shell.put("dieRunCodeFg", " ");
			shell.put("assyTestFg", " ");
			shell.put("stdCycleTime", " ");
			shell.put("procStatus", " ");
			shell.put("seqNo", " ");
			shell.put("bgReqFlag", " ");
			shell.put("wfMapReqFg", " ");
			shell.put("lastTestDate", " ");
			shell.put("wfDevice", " ");
			shell.put("engCode", " ");
			shell.put("secondTcardFactory", " ");
			shell.put("priTcardFactory", " ");
			shell.put("markSpecNo", " ");
			shell.put("packingMethod", " ");
			shell.put("prodDesc", " ");
			shell.put("numberFullLabel", " ");
			shell.put("numberInnerLabel", " ");
			shell.put("traceFormat", " ");
			shell.put("burninFg", " ");
			shell.put("cardPhaseType", " ");
			shell.put("secondTcard", " ");
			shell.put("markType", " ");
			shell.put("moldType", " ");
			shell.put("plattingType", " ");
			shell.put("wireQty", " ");
			shell.put("tubeRemark", " ");
			shell.put("packingType", " ");
			shell.put("bpcInst", " ");
			shell.put("flowName", " ");
			shell.put("limitTime", " ");
			shell.put("bdSbName", " ");
			shell.put("wbDevice", " ");
			shell.put("markDevice", " ");
			shell.put("bodySize", " ");
			shell.put("leadCount", " ");
			shell.put("fluxPrintStencil", " ");
			shell.put("ballMountStancil", " ");
			shell.put("postReticle", " ");
			shell.put("prodPreFix", " ");
			shell.put("resinThickness", " ");
			shell.put("waferThickness", " ");
			shell.put("ballType", " ");
			shell.put("ballSize", " ");
			shell.put("ballPlacement", " ");
			shell.put("piReticle", " ");
			shell.put("rdlReticle", " ");
			shell.put("ubmReticle", " ");
			shell.put("resin", " ");
			shell.put("cmf1", " ");
			shell.put("cmf2", " ");
			shell.put("cmf3", " ");
			shell.put("cmf4", " ");
			shell.put("cmf5", " ");
			shell.put("readFlag", " ");
			shell.put("infMsg", " ");
			shell.put("infFlag", " ");
			shell.put("bumpReticle", " ");
			shell.put("cmf6", " ");
			shell.put("cmf7", " ");
			shell.put("cmf8", " ");
			shell.put("cmf9", " ");
			shell.put("cmf10", " ");
			shell.put("cmf11", " ");
			shell.put("cmf12", " ");
			shell.put("cmf13", " ");
			shell.put("cmf14", " ");
			shell.put("cmf15", " ");
			shell.put("cmf16", " ");
			shell.put("cmf17", " ");
			shell.put("cmf18", " ");
			shell.put("cmf19", " ");
			shell.put("cmf20", " ");
			shell.put("cmf21", " ");
			shell.put("cmf22", " ");
			shell.put("cmf23", " ");
			shell.put("cmf24", " ");
			shell.put("cmf25", " ");
			shell.put("cmf26", " ");
			shell.put("cmf27", " ");
			shell.put("cmf28", " ");
			shell.put("cmf29", " ");
			shell.put("cmf30", " ");
			shell.put("piReticle2", " ");
			shell.put("ubmReticle2", " ");
			shell.put("resvField1", " ");
			shell.put("resvField2", " ");
			shell.put("resvField3", " ");
			shell.put("resvField4", " ");
			shell.put("resvField5", " ");
			shell.put("resvField6", " ");
			shell.put("resvField7", " ");
			shell.put("resvField8", " ");
			shell.put("resvField9", " ");
			shell.put("resvField10", " ");
			cInfSpeDatList.add(shell);
			System.out.println("cInfSpeDatList--" + cInfSpeDatList);
			message.put("cInfSpeDatList", cInfSpeDatList);
			System.out.println("message--" + message);
			req.put("message", message);
			System.out.println("req--" + req);
			String retSrcs = HttpClientJson.readInterfacePost(url,
					req.toString());
			System.out.println("req.toString()--" + req.toString());

			// shell.put("infTime", " ");
			// shell.put("infSeq", String.valueOf(2));
			// shell.put("matnr", " ");
			// shell.put("werks", " ");
			// shell.put("stlan", " ");
			// shell.put("stlal", " ");
			// shell.put("plnnr", " ");
			// shell.put("posnr", " ");
			// shell.put("idnrk", " ");
			// shell.put("menge", " ");
			// shell.put("meins", " ");
			// shell.put("ausch", " ");
			// shell.put("alpgr", " ");
			// shell.put("alprf", " ");
			// shell.put("alpst", " ");
			// shell.put("ewahr", " ");
			// shell.put("itsob", " ");
			// shell.put("lgort", " ");
			// shell.put("sanka", " ");
			// shell.put("readFlag", " ");
			// shell.put("infMsg", " ");
			// shell.put("infFlag", " ");
			// shell.put("cmf1", " ");
			// shell.put("cmf2", " ");
			// shell.put("cmf3", " ");
			// shell.put("cmf4", " ");
			// shell.put("cmf5", " ");
			// shell.put("cmf6", " ");
			// shell.put("cmf7", " ");
			// shell.put("cmf8", " ");
			// shell.put("cmf9", " ");
			// shell.put("cmf10", " ");
			// shell.put("deleteFlag", " ");
			// shell.put("createTime", " ");
			// shell.put("createUserId", " ");
			// shell.put("updateTime", " ");
			// shell.put("updateUserId", " ");
			// shell.put("deleteTime", " ");
			// shell.put("deleteUserId", " ");
			// cInfPatDatList.add(shell);
			//
			// /**
			// * FLW
			// */
			// shell.put("infTime", " ");
			// shell.put("infSeq", String.valueOf(3));
			// shell.put("matnr", " ");
			// shell.put("werks", " ");
			// shell.put("plnnr", " ");
			// shell.put("plnal", " ");
			// shell.put("plnfl", " ");
			// shell.put("vornr", " ");
			// shell.put("arbpl", " ");
			// shell.put("steus", "PP01");
			// shell.put("ktsch", " ");
			// shell.put("ltxa1", " ");
			// shell.put("vgw01", "0");
			// shell.put("vgw02", "60");
			// shell.put("vgw03", "60");
			// shell.put("vgw04", "60");
			// shell.put("vgw05", "60");
			// shell.put("vgw06", "60");
			// shell.put("infnr", " ");
			// shell.put("ekorg", " ");
			// shell.put("sakto", " ");
			// shell.put("bmsch", " ");
			// shell.put("uemus", " ");
			// shell.put("minwe", " ");
			// shell.put("spmus", " ");
			// shell.put("splim", " ");
			// shell.put("umrez", " ");
			// shell.put("meinh", " ");
			// shell.put("readFlag", " ");
			// shell.put("infMsg", " ");
			// shell.put("infFlag", " ");
			// shell.put("cmf1", " ");
			// shell.put("cmf2", " ");
			// shell.put("cmf3", " ");
			// shell.put("cmf4", " ");
			// shell.put("cmf5", " ");
			// shell.put("cmf6", " ");
			// shell.put("cmf7", " ");
			// shell.put("cmf8", " ");
			// shell.put("cmf9", " ");
			// shell.put("cmf10", " ");
			// shell.put("deleteFlag", " ");
			// shell.put("createTime", " ");
			// shell.put("createUserId", " ");
			// shell.put("updateTime", " ");
			// shell.put("updateUserId", " ");
			// shell.put("deleteTime", " ");
			// shell.put("deleteUserId", " ");
			// cInfFlwDatList.add(shell);
			//
			// shell.put("infTime", " ");
			// shell.put("infSeq", String.valueOf(4));
			// shell.put("matnr", " ");
			// shell.put("werks", " ");
			// shell.put("plnnr", " ");
			// shell.put("plnal", " ");
			// shell.put("plnfl", " ");
			// shell.put("vornr", " ");
			// shell.put("idnrk", " ");
			// shell.put("posnr", " ");
			// shell.put("stlan", " ");
			// shell.put("stlal", " ");
			// shell.put("readFlag", " ");
			// shell.put("infMsg", " ");
			// shell.put("infFlag", " ");
			// shell.put("cmf1", " ");
			// shell.put("cmf2", " ");
			// shell.put("cmf3", " ");
			// shell.put("cmf4", " ");
			// shell.put("cmf5", " ");
			// shell.put("cmf6", " ");
			// shell.put("cmf7", " ");
			// shell.put("cmf8", " ");
			// shell.put("cmf9", " ");
			// shell.put("cmf10", " ");
			// shell.put("deleteFlag", " ");
			// shell.put("createTime", " ");
			// shell.put("createUserId", " ");
			// shell.put("updateTime", " ");
			// shell.put("updateUserId", " ");
			// shell.put("deleteTime", " ");
			// shell.put("deleteUserId", " ");
			// cInfBomDatList.add(shell);
			//
			// message.put("cInfSpeDatList", cInfSpeDatList);
			// message.put("cInfPatDatList", cInfPatDatList);
			// message.put("cInfFlwDatList", cInfFlwDatList);
			// message.put("cInfBomDatList", cInfBomDatList);
			// req.put("message", message);
			// System.out.println(req);
			// String retSrcs = HttpClientJson.readInterfacePost(url,
			// req.toString());
			// JSONObject results = new JSONObject(retSrcs);
			// String statusValue = results.get("statusValue").toString();
			// String msg = results.get("msg").toString();
			// System.out
			// .println("******************************************0****************************************");
			// System.out.println(req);
			// System.out
			// .println("******************************************1****************************************");
			// System.out.println(retSrcs);
			// System.out
			// .println("******************************************2****************************************");
			// System.out.println(results);
			// System.out
			// .println("******************************************3****************************************");
			// System.out.println(statusValue);
			// System.out
			// .println("******************************************4****************************************");
			// System.out.println(msg);
		} catch (JSONException e) {
			e.printStackTrace();
		}
	}
}
