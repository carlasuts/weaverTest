package weaver.interfaces.sap;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

public class SELECTCINFSPEDAT {

	private static final String url = "http://172.16.60.96:8099/MesWebService/req";
	private String logtablename = "CINFSPEDAT";

	public void selectcinfspedat(String rid) throws Exception {

		final String KEY_FROMSYSTEM = "fromSystem";
		final String KEY_FUNCTIONNAME = "functionName";
		final String KEY_TOKEN = "token";
		final String KEY_MESSAGE = "message";

		final String VALUE_FROMSYSTEM = "OA";
		final String VALUE_FUNCTIONAME = "MES_UPLOADMASTERDATA";
		final String VALUE_TOKEN = "OATESTTOKEN";

		HttpPost request = new HttpPost(url);
		// 先封装一个 JSON 对象
		JSONObject param = new JSONObject();
		param.put(KEY_FROMSYSTEM, VALUE_FROMSYSTEM);
		param.put(KEY_FUNCTIONNAME, VALUE_FUNCTIONAME);
		param.put(KEY_TOKEN, VALUE_TOKEN);

		JSONObject message = new JSONObject();

		List<Map<String, String>> list = new ArrayList<Map<String, String>>();
		list = SapLogWriter.selectByRequestId(logtablename, rid);
		for (int j = 0; j < list.size(); j++) {
			JSONObject[] cInfSpeDatList = new JSONObject[list.size()];
			cInfSpeDatList[j] = new JSONObject();
			Map<String, String> data = list.get(j);
			cInfSpeDatList[j].put("InfTime", data.get("INF_TIME"));
			cInfSpeDatList[j].put("InfSeq", data.get("INF_SEQ"));
			cInfSpeDatList[j].put("Factory", data.get("FACTORY"));
			cInfSpeDatList[j].put("MatId", data.get("MAT_ID"));
			cInfSpeDatList[j].put("CustId", data.get("CUST_ID"));
			cInfSpeDatList[j].put("CustMatId", data.get("CUST_MAT_ID"));
			cInfSpeDatList[j].put("CustMatDesc", data.get("CUST_MAT_DESC"));
			cInfSpeDatList[j].put("DbMatId", data.get("DB_MAT_ID"));
			cInfSpeDatList[j].put("PkgType", data.get("PKG_TYPE"));
			cInfSpeDatList[j].put("PackCode", data.get("PACK_CODE"));
			cInfSpeDatList[j].put("PkldCode", data.get("PKLD_CODE"));
			cInfSpeDatList[j].put("AddBondDiagramNo", data.get("ADD_BOND_DIAGRAM_NO"));
			cInfSpeDatList[j].put("AddBondDiagramRev", data.get("ADD_BOND_DIAGRAM_REV"));
			cInfSpeDatList[j].put("FlowId", data.get("FLOW_ID"));
			cInfSpeDatList[j].put("OrgCustDeviceId", data.get("ORG_CUST_DEVICE_ID"));
			cInfSpeDatList[j].put("TopMarkFormatId", data.get("TOP_MARK_FORMAT_ID"));
			cInfSpeDatList[j].put("BackMarkFormatId", data.get("BACK_MARK_FORMAT_ID"));
			cInfSpeDatList[j].put("RecipeGroup", data.get("RECIPE_GROUP"));
			cInfSpeDatList[j].put("StdLotSize", data.get("STD_LOT_SIZE"));
			cInfSpeDatList[j].put("MatUnit", data.get("MAT_UNIT"));
			cInfSpeDatList[j].put("BuOper", data.get("BU_OPER"));
			cInfSpeDatList[j].put("TnrStdOutboxQty", data.get("TNR_STD_OUTBOX_QTY"));
			cInfSpeDatList[j].put("TubeStdOutboxQty", data.get("TUBE_STD_OUTBOX_QTY"));
			cInfSpeDatList[j].put("TubeRealPackQty", data.get("TUBE_REAL_PACK_QTY"));
			cInfSpeDatList[j].put("StdPackQty", data.get("STD_PACK_QTY"));
			cInfSpeDatList[j].put("HalfPackQty", data.get("HALF_PACK_QTY"));
			cInfSpeDatList[j].put("TnrQty", data.get("TNR_QTY"));
			cInfSpeDatList[j].put("TubeQty", data.get("TUBE_QTY"));
			cInfSpeDatList[j].put("TrNeedFullInbox", data.get("TR_NEED_FULL_INBOX"));
			cInfSpeDatList[j].put("Info1", data.get("INFO1"));
			cInfSpeDatList[j].put("Info2", data.get("INFO2"));
			cInfSpeDatList[j].put("Info3", data.get("INFO3"));
			cInfSpeDatList[j].put("Info4", data.get("INFO4"));
			cInfSpeDatList[j].put("Info5", data.get("INFO5"));
			cInfSpeDatList[j].put("Lable1", data.get("LABLE1"));
			cInfSpeDatList[j].put("Lable2", data.get("LABLE2"));
			cInfSpeDatList[j].put("Lable3", data.get("LABLE3"));
			cInfSpeDatList[j].put("Lable4", data.get("LABLE4"));
			cInfSpeDatList[j].put("Lable5", data.get("LABLE5"));
			cInfSpeDatList[j].put("Lable6", data.get("LABLE6"));
			cInfSpeDatList[j].put("Lable7", data.get("LABLE7"));
			cInfSpeDatList[j].put("Lable8", data.get("LABLE8"));
			cInfSpeDatList[j].put("Lable9", data.get("LABLE9"));
			cInfSpeDatList[j].put("Lable10", data.get("LABLE10"));
			cInfSpeDatList[j].put("Lable11", data.get("LABLE11"));
			cInfSpeDatList[j].put("Lable12", data.get("LABLE12"));
			cInfSpeDatList[j].put("Lable13", data.get("LABLE13"));
			cInfSpeDatList[j].put("Lable14", data.get("LABLE14"));
			cInfSpeDatList[j].put("Lable15", data.get("LABLE15"));
			cInfSpeDatList[j].put("Lable16", data.get("LABLE16"));
			cInfSpeDatList[j].put("Lable17", data.get("LABLE17"));
			cInfSpeDatList[j].put("Lable18", data.get("LABLE18"));
			cInfSpeDatList[j].put("Lable19", data.get("LABLE19"));
			cInfSpeDatList[j].put("Lable20", data.get("LABLE20"));
			cInfSpeDatList[j].put("Mark1", data.get("MARK1"));
			cInfSpeDatList[j].put("Mark2", data.get("MARK2"));
			cInfSpeDatList[j].put("Mark3", data.get("MARK3"));
			cInfSpeDatList[j].put("Mark4", data.get("MARK4"));
			cInfSpeDatList[j].put("Mark5", data.get("MARK5"));
			cInfSpeDatList[j].put("TrDataType", data.get("TR_DATA_TYPE"));
			cInfSpeDatList[j].put("Instruction1", data.get("INSTRUCTION1"));
			cInfSpeDatList[j].put("Instruction2", data.get("INSTRUCTION2"));
			cInfSpeDatList[j].put("Instruction3", data.get("INSTRUCTION3"));
			cInfSpeDatList[j].put("UpperWfThick", data.get("UPPER_WF_THICK"));
			cInfSpeDatList[j].put("LowerWfThick", data.get("LOWER_WF_THICK"));
			cInfSpeDatList[j].put("WfSize", data.get("WF_SIZE"));
			cInfSpeDatList[j].put("PrimaryTcard", data.get("PRIMARY_TCARD"));
			cInfSpeDatList[j].put("Msllabel", data.get("MSLLABEL"));
			cInfSpeDatList[j].put("BsmCode", data.get("BSM_CODE"));
			cInfSpeDatList[j].put("LotCode", data.get("LOT_CODE"));
			cInfSpeDatList[j].put("TsmCode", data.get("TSM_CODE"));
			cInfSpeDatList[j].put("OutDevice", data.get("OUT_DEVICE"));
			cInfSpeDatList[j].put("MarkngSpecVersion", " ");
			cInfSpeDatList[j].put("ChipSizeX", data.get("CHIP_SIZE_X"));
			cInfSpeDatList[j].put("ChipSizeY", data.get("CHIP_SIZE_Y"));
			cInfSpeDatList[j].put("ScribeWidth", data.get("SCRIBE_WIDTH"));
			cInfSpeDatList[j].put("Bpo", data.get("BPO"));
			cInfSpeDatList[j].put("Bpp", data.get("BPP"));
			cInfSpeDatList[j].put("CardProcFg", data.get("CARD_PROC_FG"));
			cInfSpeDatList[j].put("PbFreeFg", data.get("PB_FREE_FG"));
			cInfSpeDatList[j].put("DieDown", data.get("DIE_DOWN"));
			cInfSpeDatList[j].put("BomNo", data.get("BOM_NO"));
			cInfSpeDatList[j].put("GrpDevice", data.get("GRP_DEVICE"));
			cInfSpeDatList[j].put("ProdClass", data.get("PROD_CLASS"));
			cInfSpeDatList[j].put("SubLotSize", data.get("SUB_LOT_SIZE"));
			cInfSpeDatList[j].put("MaxAsyLotCnt", data.get("MAX_ASY_LOT_CNT"));
			cInfSpeDatList[j].put("WfIngredients", data.get("WF_INGREDIENTS"));
			cInfSpeDatList[j].put("ChipType", data.get("CHIP_TYPE"));
			cInfSpeDatList[j].put("DaMode", data.get("DA_MODE"));
			cInfSpeDatList[j].put("DieCoating", data.get("DIE_COATING"));
			cInfSpeDatList[j].put("HygrosLevel", data.get("HYGROS_LEVEL"));
			cInfSpeDatList[j].put("CoatingType", data.get("COATING_TYPE"));
			cInfSpeDatList[j].put("CarProd", data.get("CAR_PROD"));
			cInfSpeDatList[j].put("Mark", data.get("MARK"));
			cInfSpeDatList[j].put("Plate", data.get("PLATE"));
			cInfSpeDatList[j].put("ReelSize", data.get("REEL_SIZE"));
			cInfSpeDatList[j].put("ReelDiraction", data.get("REEL_DIRACTION"));
			cInfSpeDatList[j].put("RellQty", data.get("RELL_QTY"));
			cInfSpeDatList[j].put("HalogenFProd", data.get("HALOGEN_F_PROD"));
			cInfSpeDatList[j].put("StripProd", data.get("STRIP_PROD"));
			cInfSpeDatList[j].put("PadType", data.get("PAD_TYPE"));
			cInfSpeDatList[j].put("TestFlwChart", data.get("TEST_FLW_CHART"));
			cInfSpeDatList[j].put("TestPlatfom", data.get("TEST_PLATFOM"));
			cInfSpeDatList[j].put("TestSystem", data.get("TEST_SYSTEM"));
			cInfSpeDatList[j].put("TestHandler", data.get("TEST_HANDLER"));
			cInfSpeDatList[j].put("TestPrgRev1", data.get("TEST_PRG_REV1"));
			cInfSpeDatList[j].put("QaPrg1", data.get("QA_PRG1"));
			cInfSpeDatList[j].put("QaPrg2", data.get("QA_PRG2"));
			cInfSpeDatList[j].put("TestTempe", data.get("TEST_TEMPE"));
			cInfSpeDatList[j].put("DieRunCodeFg", data.get("DIE_RUN_CODE_FG"));
			cInfSpeDatList[j].put("AssyTestFg", data.get("ASSY_TEST_FG"));
			cInfSpeDatList[j].put("StdCycleTime", data.get("STD_CYCLE_TIME"));
			cInfSpeDatList[j].put("ProcStatus", data.get("PROC_STATUS"));
			cInfSpeDatList[j].put("SeqNo", data.get("SEQ_NO"));
			cInfSpeDatList[j].put("BgReqFlag", data.get("BG_REQ_FLAG"));
			cInfSpeDatList[j].put("WfMapReqFg", data.get("WF_MAP_REQ_FG"));
			cInfSpeDatList[j].put("LastTestDate", data.get("LAST_TEST_DATE"));
			cInfSpeDatList[j].put("WfDevice", data.get("WF_DEVICE"));
			cInfSpeDatList[j].put("EngCode", data.get("END_CODE"));
			cInfSpeDatList[j].put("SecondTcardFactory", data.get("SECOND_TCARD_FACTORY"));
			cInfSpeDatList[j].put("PriTcardFactory", data.get("PRI_TCARD_FACTORY"));
			cInfSpeDatList[j].put("MarkSpecNo", data.get("MARK_SPEC_NO"));
			cInfSpeDatList[j].put("PackingMethod", data.get("PACKING_METHOD"));
			cInfSpeDatList[j].put("ProdDesc", data.get("PROD_DESC"));
			cInfSpeDatList[j].put("NumberFullLabel", data.get("NUMBER_FULL_LABEL"));
			cInfSpeDatList[j].put("NumberInnerLabel", data.get("NUMBER_INNER_LABEL"));
			cInfSpeDatList[j].put("TraceFormat", data.get("TRACE_FORMAT"));
			cInfSpeDatList[j].put("BurninFg", data.get("BURNIN_FG"));
			cInfSpeDatList[j].put("CardPhaseType", data.get("CARD_PHASE_TYPE"));
			cInfSpeDatList[j].put("SecondTcard", data.get("SECOND_TCARD"));
			cInfSpeDatList[j].put("MarkType", data.get("MARK_TYPE"));
			cInfSpeDatList[j].put("MoldType", data.get("MOLD_TYPE"));
			cInfSpeDatList[j].put("PlattingType", data.get("PLATTING_TYPE"));
			cInfSpeDatList[j].put("WireQty", data.get("WIRE_QTY"));
			cInfSpeDatList[j].put("TubeRemark", data.get("TUBE_REMARK"));
			cInfSpeDatList[j].put("PackingType", data.get("PACKING_TYPE"));
			cInfSpeDatList[j].put("BpcInst", data.get("BPC_INST"));
			cInfSpeDatList[j].put("FlowName", data.get("FLOW_NAME"));
			cInfSpeDatList[j].put("LimitTime", data.get("LIMIT_TIME"));
			cInfSpeDatList[j].put("BdSbName", data.get("BD_SB_NAME"));
			cInfSpeDatList[j].put("WbDevice", data.get("WB_DEVICE"));
			cInfSpeDatList[j].put("MarkDevice", data.get("MARK_DEVICE"));
			cInfSpeDatList[j].put("BodySize", data.get("BODY_SIZE"));
			cInfSpeDatList[j].put("LeadCount", data.get("LEAD_COUNT"));
			cInfSpeDatList[j].put("FluxPrintStencil", data.get("FLUX_PRINT_STENCIL"));
			cInfSpeDatList[j].put("BallMountStancil", data.get("BALL_MOUNT_STANCIL"));
			cInfSpeDatList[j].put("PostReticle", data.get("POST_RETICLE"));
			cInfSpeDatList[j].put("ProdPreFix", data.get("PROD_PRE_FIX"));
			cInfSpeDatList[j].put("ResinThickness", data.get("RESIN_THICKNESS"));
			cInfSpeDatList[j].put("WaferThickness", data.get("WAFER_THICKNESS"));
			cInfSpeDatList[j].put("BallType", data.get("BALL_TYPE"));
			cInfSpeDatList[j].put("BallSize", data.get("BALL_SIZE"));
			cInfSpeDatList[j].put("BallPlacement", data.get("BALL_PLACEMENT"));
			cInfSpeDatList[j].put("PiReticle", data.get("PI_RETICLE"));
			cInfSpeDatList[j].put("RdlReticle", data.get("RDL_RETICLE"));
			cInfSpeDatList[j].put("UbmReticle", data.get("UBM_RETICLE"));
			cInfSpeDatList[j].put("Resin", data.get("RESIN"));
			cInfSpeDatList[j].put("Cmf1", data.get("CMF_1"));
			cInfSpeDatList[j].put("Cmf2", data.get("CMF_2"));
			cInfSpeDatList[j].put("Cmf3", data.get("CMF_3"));
			cInfSpeDatList[j].put("Cmf4", data.get("CMF_4"));
			cInfSpeDatList[j].put("Cmf5", data.get("CMF_5"));
			cInfSpeDatList[j].put("ReadFlag", data.get("READ_FLAG"));
			cInfSpeDatList[j].put("InfMsg", data.get("INF_MSG"));
			cInfSpeDatList[j].put("InfFlag", data.get("INF_FLAG"));
			cInfSpeDatList[j].put("BumpReticle", data.get("BUMP_RETICLE"));
			cInfSpeDatList[j].put("Cmf6", data.get("CMF_6"));
			cInfSpeDatList[j].put("Cmf7", data.get("CMF_7"));
			cInfSpeDatList[j].put("Cmf8", data.get("CMF_8"));
			cInfSpeDatList[j].put("Cmf9", data.get("CMF_9"));
			cInfSpeDatList[j].put("Cmf10", data.get("CMF_10"));
			cInfSpeDatList[j].put("Cmf11", data.get("CMF_11"));
			cInfSpeDatList[j].put("Cmf12", data.get("CMF_12"));
			cInfSpeDatList[j].put("Cmf13", data.get("CMF_13"));
			cInfSpeDatList[j].put("Cmf14", data.get("CMF_14"));
			cInfSpeDatList[j].put("Cmf15", data.get("CMF_15"));
			cInfSpeDatList[j].put("Cmf16", data.get("CMF_16"));
			cInfSpeDatList[j].put("Cmf17", data.get("CMF_17"));
			cInfSpeDatList[j].put("Cmf18", data.get("CMF_18"));
			cInfSpeDatList[j].put("Cmf19", data.get("CMF_19"));
			cInfSpeDatList[j].put("Cmf20", data.get("CMF_20"));
			cInfSpeDatList[j].put("Cmf21", data.get("CMF_21"));
			cInfSpeDatList[j].put("Cmf22", data.get("CMF_22"));
			cInfSpeDatList[j].put("Cmf23", data.get("CMF_23"));
			cInfSpeDatList[j].put("Cmf24", data.get("CMF_24"));
			cInfSpeDatList[j].put("Cmf25", data.get("CMF_25"));
			cInfSpeDatList[j].put("Cmf26", data.get("CMF_26"));
			cInfSpeDatList[j].put("Cmf27", data.get("CMF_27"));
			cInfSpeDatList[j].put("Cmf28", data.get("CMF_28"));
			cInfSpeDatList[j].put("Cmf29", data.get("CMF_29"));
			cInfSpeDatList[j].put("Cmf30", data.get("CMF_30"));
			cInfSpeDatList[j].put("PiReticle2", data.get("PI_RETICLE2"));
			cInfSpeDatList[j].put("UbmReticle2", data.get("UBM_RETICLE2"));
			cInfSpeDatList[j].put("ResvField1", data.get("RESV_FIELD1"));
			cInfSpeDatList[j].put("ResvField2", data.get("RESV_FIELD2"));
			cInfSpeDatList[j].put("ResvField3", data.get("RESV_FIELD3"));
			cInfSpeDatList[j].put("ResvField4", data.get("RESV_FIELD4"));
			cInfSpeDatList[j].put("ResvField5", data.get("RESV_FIELD5"));
			cInfSpeDatList[j].put("ResvField6", data.get("RESV_FIELD6"));
			cInfSpeDatList[j].put("ResvField7", data.get("RESV_FIELD7"));
			cInfSpeDatList[j].put("ResvField8", data.get("RESV_FIELD8"));
			cInfSpeDatList[j].put("ResvField9", data.get("RESV_FIELD9"));
			cInfSpeDatList[j].put("ResvField10", data.get("RESV_FIELD10"));
			cInfSpeDatList[j].put("Label21", data.get("LABEL21"));
			cInfSpeDatList[j].put("Label22", data.get("LABEL22"));
			cInfSpeDatList[j].put("Label23", data.get("LABEL23"));
			cInfSpeDatList[j].put("Label24", data.get("LABEL24"));
			cInfSpeDatList[j].put("Label25", data.get("LABEL25"));
			cInfSpeDatList[j].put("Label26", data.get("LABEL26"));
			cInfSpeDatList[j].put("Label27", data.get("LABEL27"));
			cInfSpeDatList[j].put("Label28", data.get("LABEL28"));
			cInfSpeDatList[j].put("Label29", data.get("LABEL29"));
			cInfSpeDatList[j].put("Label30", data.get("LABEL30"));

			message.put("cInfSpeDatList", cInfSpeDatList);

			param.put("message", message);
			// 绑定到请求 Entry
			StringEntity se = new StringEntity(param.toString());
			request.setEntity(se);
			System.out.println(request);
			System.out.println("-----------------------------");

			System.out.println("param: " + param.toString());
			System.out.println("-----------------------------");
			// 发送请求
			HttpResponse httpResponse = new DefaultHttpClient().execute(request);
			// 得到应答的字符串，这也是一个 JSON 格式保存的数据
			String retSrc = EntityUtils.toString(httpResponse.getEntity());
			System.out.println(retSrc);
		}

	}
}
